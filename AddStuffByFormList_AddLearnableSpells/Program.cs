using Mutagen.Bethesda;
using Mutagen.Bethesda.Synthesis;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Plugins;

namespace AddStuffByFormList_AddLearnableSpells
{
    public class Program
    {
        public static Lazy<SpecialSettings> _Settings = new Lazy<SpecialSettings>();
        public static SpecialSettings Settings => _Settings.Value;

        public static async Task<int> Main(string[] args)
        {
            return await SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetAutogeneratedSettings("Settings", "settings.json", out _Settings)
                .SetTypicalOpen(GameRelease.SkyrimSE, "MyAddStuff.esp")
                .Run(args);
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            Console.WriteLine("Hello World!");
            if(!state.LinkCache.TryResolve<IFormListGetter>(FormKey.Factory("000D63:Add Stuff By FormList.esp"), out var temp))
            {
                Console.WriteLine("Could not find \"Add Stuff By FormList.esp\" FormList.");
                return;
            }
            FormList _ASBF_FormListStuff = state.PatchMod.FormLists.GetOrAddAsOverride(temp);
            

            HashSet<FormKey> booksToAdd = new();

            foreach (var book in state.LoadOrder.PriorityOrder.Book().WinningOverrides())
            {
                if (!Settings.LearnableSpellModNames.Contains(book.FormKey.ModKey)) continue;

                if (book.Teaches is IBookSpellGetter spellTome)
                {
                    if (Settings.LearnableSpellModNamesValidHalfCostPerks.Any())
                    {
                        if(state.LinkCache.TryResolve<ISpellGetter>(spellTome.Spell.FormKey, out var spell))
                        {
                            if (spell.HalfCostPerk != null && Settings.LearnableSpellModNamesValidHalfCostPerks.Contains(spell.HalfCostPerk.FormKey))
                            {
                                Console.WriteLine($"Adding {book.FormKey} ; {spellTome.Spell.FormKey}");
                                _ASBF_FormListStuff.Items.Add(spellTome.Spell.FormKey);
                            }
                            else if(Settings.AddBooksFromLearnableSpellModNames) booksToAdd.Add(book.FormKey);
                        }
                    }
                    else
                    {
                        Console.WriteLine($"Adding {book.FormKey} ; {spellTome.Spell.FormKey}");
                        _ASBF_FormListStuff.Items.Add(spellTome.Spell.FormKey);
                    }
                }
            }

            foreach (var spellKey in Settings.DirectSpells)
            {
                Console.WriteLine($"Adding Direct Spell {spellKey}");
                _ASBF_FormListStuff.Items.Add(spellKey);
            }

            foreach(var bookKey in booksToAdd)
            {
                Console.WriteLine($"Adding Spell Book {bookKey}");
                _ASBF_FormListStuff.Items.Add(bookKey);
            }
        }

    }
}
